package com.certoclav.certoscale.database;


import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

import org.json.JSONObject;

import static android.R.attr.visibility;



/*
{
    "_id": {
        "$oid": "58a1c719f36d2837a7c7456a"
    },
    "name": "Check Weigh ->Over Under",
    "userid": "",
    "devicekey": "93943649346387463",
    "date": "2014-06-25T00:00:00.000Z",
    "visibility": "private",
    "content": "BioLab GmbH\r\nExamplestreet 23\r\n8272 Munich\r\nGermany\r\n12/7/2010 3:32 PM\r\nBalance ID: 1202372\r\nBalance Name: EXPLORER SMART\r\nUser Name: michaeldirix@web.de\r\nProject Name:\r\nApplication: Check Weighing\r\nResult: Accept\r\nGross: 1.401 g\r\nNet: 0.455 g Net\r\nTare: 0.946 g \r\nOver Limit: 619.999 g\r\nUnder Limit: 0.010 g"
}
 */
/**
 * A simple demonstration object we are creating and persisting to the database.
 */
@DatabaseTable(tableName = "protocol")
public class Protocol {

	// id is generated by the database and set on the object automatically


	Protocol(){

	}


	public int getItem_id() {
		return item_id;
	}

	@DatabaseField(generatedId = true, columnName = "protocol_id")
	private int item_id;


	public String getProtocolJson() {
		return itemJson;
	}

	public void setProtocolJson(String itemJson) {
		this.itemJson = itemJson;
	}

	@DatabaseField(columnName = "protocol_json")
	private String itemJson;

	public String generateItemJson(String name, String userEmail,String deviceKey, String date, boolean visibility, String content){
		JSONObject jsonObject = new JSONObject();

		try {
			jsonObject
					.put("name", name)
					.put("userid", userEmail)
					.put("devicekey",deviceKey)
					.put("date", date)
					.put("visibility", visibility)
					.put("content",content);
		}catch (Exception e){
			e.printStackTrace();
		}
		return jsonObject.toString();
	}

	public Protocol(String cloudId, String itemJson) {
		this.cloudId = cloudId;
		this.itemJson = itemJson;
	}
	public Protocol(String cloudId, String name, Double weight, Double Cost, String articleNumber) {
		this.cloudId = cloudId;
		this.itemJson = generateItemJson(name, weight,Cost, articleNumber);
	}

	@DatabaseField(columnName = "cloud_id")
	private String cloudId;


	public String getItemArticleNumber() {
		String retVal = "";

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			retVal = recipeJson.getString("artnumber");
		}catch (Exception e){
			e.printStackTrace();
		}
		return retVal;

	}


	public String getName() {
		String retVal = "";

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			retVal = recipeJson.getString("name");
		}catch (Exception e){
			e.printStackTrace();
		}
		return retVal;

	}


	public void setWeight(Double weight) {

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			recipeJson.put("weight",weight);
			itemJson = recipeJson.toString();
		}catch (Exception e){
			e.printStackTrace();
		}


	}


	public void setCost(Double Cost) {

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			recipeJson.put("Cost",Cost);
			itemJson = recipeJson.toString();
		}catch (Exception e){
			e.printStackTrace();
		}


	}


	public void setName(String name) {

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			recipeJson.put("name",name);
			itemJson = recipeJson.toString();
		}catch (Exception e){
			e.printStackTrace();
		}


	}

	public Double getWeight() {
		Double retVal = 0d;

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			retVal = recipeJson.getDouble("weight");
		}catch (Exception e){
			e.printStackTrace();
		}
		return retVal;

	}

	public Double getCost(){
		Double retVal = 0d;
		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			retVal = recipeJson.getDouble("Cost");
		}catch (Exception e){
			e.printStackTrace();
		}
		return retVal;


	}

	public void setArticleNumber(String s) {

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			recipeJson.put("artnumber",s);
			itemJson = recipeJson.toString();
		}catch (Exception e){
			e.printStackTrace();
		}

	}
}




