package com.certoclav.certoscale.database;


import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

import org.json.JSONObject;

/**
 * A simple demonstration object we are creating and persisting to the database.
 */
@DatabaseTable(tableName = "item")
public class Item {

	// id is generated by the database and set on the object automatically


	Item(){

	}


	public int getRecipe_id() {
		return recipe_id;
	}

	@DatabaseField(generatedId = true, columnName = "item_id")
	private int recipe_id;


	@DatabaseField(columnName = "item_json")
	private String itemJson;

	public String generateItemJson(String name, Double weight, String articleNumber){
		JSONObject jsonObjectItem = new JSONObject();
		try {

			jsonObjectItem.put("name", name).put("weight", weight).put("artnumber",articleNumber);
		}catch (Exception e){
			e.printStackTrace();
		}
		return jsonObjectItem.toString();
	}

	public Item(String cloudId, String itemJson) {
		this.cloudId = cloudId;
		this.itemJson = itemJson;
	}
	public Item(String cloudId, String name, Double weight, String articleNumber) {
		this.cloudId = cloudId;
		this.itemJson = generateItemJson(name, weight, articleNumber);
	}

	@DatabaseField(columnName = "cloud_id")
	private String cloudId;


	public String getItemArticleNumber() {
		String retVal = "";

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			retVal = recipeJson.getString("artnumber");
		}catch (Exception e){
			e.printStackTrace();
		}
		return retVal;

	}


	public String getName() {
		String retVal = "";

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			retVal = recipeJson.getString("name");
		}catch (Exception e){
			e.printStackTrace();
		}
		return retVal;

	}

	public void setWeight(Double weight) {

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			recipeJson.put("weight",weight);
		}catch (Exception e){
			e.printStackTrace();
		}


	}


	public void setName(String name) {

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			recipeJson.put("name",name);
		}catch (Exception e){
			e.printStackTrace();
		}


	}

	public Double getWeight() {
		Double retVal = 0d;

		try {
			JSONObject recipeJson = new JSONObject(this.itemJson);
			retVal = recipeJson.getDouble("weight");
		}catch (Exception e){
			e.printStackTrace();
		}
		return retVal;

	}

}




