package com.certoclav.certoscale.database;


import com.j256.ormlite.field.DataType;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

import java.util.Date;

/**
 * A simple demonstration object we are creating and persisting to the database.
 */
@DatabaseTable(tableName = "library")
public class Library {
	public static final String FIELD_LIBRARY_APPLICATION = "application";
	public static final String FIELD_LIBRARY_ID = "library_id";
	public static final String FIELD_LIBRARY_CLOUD_ID = "cloud_id";
	public static final String FIELD_LIBRARY_VERSION = "version";
	public static final String FIELD_LIBRARY_NAME = "name";
	public static final String FIELD_LIBRARY_TARA = "tara";
	public static final String FIELD_LIBRARY_TARGET = "target";
	public static final String FIELD_LIBRARY_SAMPLE_SIZE = "sample_size";
	public static final String FIELD_LIBRARY_AVERAGE_PIECE_WEIGHT = "apw";
	public static final String FIELD_LIBRARY_LIMIT_UNDER = "limit_under";
	public static final String FIELD_LIBRARY_LIMIT_OVER = "limit_over";
	public static final String FIELD_LIBRARY_LEVEL = "level";
	public static final String FIELD_LIBRARY_MODE = "mode";
	public static final String FIELD_LIBRARY_DATE = "date";
	public static final String FIELD_LIBRARY_IS_LOCAL = "islocal";
	public static final String FIELD_LIBRARY_USER_EMAIL = "email";
	// id is generated by the database and set on the object automatically
	@DatabaseField(generatedId = true, columnName = FIELD_LIBRARY_ID)
	private int libraryId;

	@DatabaseField(columnName = FIELD_LIBRARY_APPLICATION)
	private int application;

	@DatabaseField(columnName = FIELD_LIBRARY_CLOUD_ID)
	private String cloudId;

	public String getUserEmail() {
		return userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@DatabaseField(columnName = FIELD_LIBRARY_USER_EMAIL)
	private String userEmail;


	public Library(String userEmail, int application, String cloudId, int version, String name, float tara, float target, float sampleSize, float underLimit, float overLimit, float level, int mode, Date date, Boolean isLocal) {
		this.userEmail = userEmail;
		this.application = application;
		this.cloudId = cloudId;
		this.version = version;
		this.name = name;
		this.tara = tara;
		this.target = target;
		this.sampleSize = sampleSize;
		this.underLimit = underLimit;
		this.overLimit = overLimit;
		this.level = level;
		this.mode = mode;
		this.date = date;
		this.isLocal = isLocal;
	}

	public int getLibraryId() {
		return libraryId;
	}

	public void setLibraryId(int libraryId) {
		this.libraryId = libraryId;
	}

	public int getApplication() {
		return application;
	}

	public void setApplication(int application) {
		this.application = application;
	}

	public String getCloudId() {
		return cloudId;
	}

	public void setCloudId(String cloudId) {
		this.cloudId = cloudId;
	}

	public int getVersion() {
		return version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public float getTara() {
		return tara;
	}

	public void setTara(float tara) {
		this.tara = tara;
	}

	public float getTarget() {
		return target;
	}

	public void setTarget(float target) {
		this.target = target;
	}

	public float getSampleSize() {
		return sampleSize;
	}

	public void setSampleSize(float sampleSize) {
		this.sampleSize = sampleSize;
	}

	public float getUnderLimit() {
		return underLimit;
	}

	public void setUnderLimit(float underLimit) {
		this.underLimit = underLimit;
	}

	public float getOverLimit() {
		return overLimit;
	}

	public void setOverLimit(float overLimit) {
		this.overLimit = overLimit;
	}

	public float getLevel() {
		return level;
	}

	public void setLevel(float level) {
		this.level = level;
	}

	public int getMode() {
		return mode;
	}

	public void setMode(int mode) {
		this.mode = mode;
	}

	public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public Boolean getLocal() {
		return isLocal;
	}

	public void setLocal(Boolean local) {
		isLocal = local;
	}

	@DatabaseField(columnName = FIELD_LIBRARY_VERSION)
	private int version;

	@DatabaseField(columnName = FIELD_LIBRARY_NAME)
	private String name;

	@DatabaseField(columnName = FIELD_LIBRARY_TARA)
	private float tara;

	@DatabaseField(columnName = FIELD_LIBRARY_TARGET)
	private float target;

	@DatabaseField(columnName = FIELD_LIBRARY_SAMPLE_SIZE)
	private float sampleSize;

	@DatabaseField(columnName = FIELD_LIBRARY_LIMIT_UNDER)
	private float underLimit;

	@DatabaseField(columnName = FIELD_LIBRARY_LIMIT_OVER)
	private float overLimit;

	@DatabaseField(columnName = FIELD_LIBRARY_LEVEL)
	private float level;

	@DatabaseField(columnName = FIELD_LIBRARY_MODE)
	private int mode;


	@DatabaseField(columnName = FIELD_LIBRARY_DATE,dataType = DataType.DATE)
	private Date date;

	@DatabaseField(columnName = FIELD_LIBRARY_IS_LOCAL)
	private Boolean isLocal;


	Library() {
		// needed by ormlite
	}


}




